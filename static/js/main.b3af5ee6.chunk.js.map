{"version":3,"sources":["components/App-game-field/App-game-field.jsx","store/reducers/birdReducer.js","store/reducers/pipesReducer.js","store/reducers/gameReducer.js","store/reducers/lifesReducer.js","store/index.js","components/App-bird/App-bird.jsx","components/App-bird/index.js","components/App-pipes/index.js","components/App-pipes/App-pipes.jsx","components/App-bird-lifes/index.js","components/App-bird-lifes/App-bird-lifes.jsx","components/App-user-details/App-user-details.jsx","components/App-user-details/index.js","components/App-game-field/index.js","components/App-start-page/index.js","components/App-start-page/App-start-page.jsx","components/App-game-score/index.js","components/App-game-score/App-game-score.jsx","components/App-create-user/index.js","components/App-create-user/App-create-user.jsx","components/App/index.js","components/App/App.jsx","index.js"],"names":["timerPipesMove","timerPipesCreate","timerBirdFall","birdReducer","createSlice","name","initialState","birdPosX","birdPosY","reducers","fallBird","state","flyBird","setStartPosForBird","actions","pipesReducer","arrayOfPipes","gameFieldHeight","gameFieldWidth","pipeWidth","pipeGap","addNewPipe","height","Math","floor","random","push","pipeHeightTop","pipeHeightBottom","pipePosX","movePipes","map","elem","deleteItemFromArrayOfPipes","gameReducer","status","userName","userScore","userListTopScore","changeGameStatus","action","payload","getUserName","getUserScore","setUserScoreToDefault","setUserListTopScore","score","lifesReducer","lifes","decreaseBirdLife","setDefaultBirdLife","store","configureStore","reducer","AppBird","dispatch","useDispatch","data","useSelector","shallowEqual","useEffect","document","addEventListener","e","keyCode","className","style","top","left","React","memo","AppPipes","pipesArray","index","Fragment","width","AppBirdLifes","dataLifes","Array","fill","AppUserDetails","AppGameField","history","useHistory","clearInterval","setInterval","AppStartPage","to","AppGameScore","usersTopScore","AppCreateUser","useState","inputValue","setInputValue","errorHandler","setErrorHandler","error","type","onChange","target","value","placeholder","onClick","preventDefault","App","location","reload","exact","path","component","ReactDOM","render","getElementById"],"mappings":"iUAqBIA,EACAC,EACAC,E,sECrBEC,EAAcC,YAAY,CAC5BC,KAAM,cACNC,aAAc,CACVC,SAAU,GACVC,SAAU,KAEdC,SAAU,CACNC,SAAU,SAACC,GACPA,EAAMH,UAAY,GAEtBI,QAAS,SAACD,GACNA,EAAMH,UAAY,IAEtBK,mBAAoB,SAACF,GAChBA,EAAMJ,SAAW,GAAMI,EAAMH,SAAW,Q,EAIIL,EAAYW,QAAtDJ,E,EAAAA,SAAUE,E,EAAAA,QAASC,E,EAAAA,mBACnBV,IAAf,QCnBMY,EAAeX,YAAY,CAC7BC,KAAM,eACNC,aAAc,CACVU,aAAc,GACdC,gBAAiB,IACjBC,eAAgB,IAChBC,UAAW,GACXC,QAAS,KAEbX,SAAU,CACNY,WAAY,SAACV,GACT,IAAIW,EAASC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,IAC3CH,EAAS,IACTA,EAAS,GAHM,IAKbJ,EAAoCP,EAApCO,eAAgBD,EAAoBN,EAApBM,gBACtBN,EAAMK,aAAaU,KAAK,CACpBC,cAAeL,EACfM,iBAAkBX,EAAkBK,EACpCH,UAAWR,EAAMQ,UACjBU,SAAUX,KAGlBY,UAAW,SAACnB,GACRA,EAAMK,aAAae,KAAI,SAACC,GACpB,OAAQA,EAAKH,UAAY,MAGjCI,2BAA4B,SAACtB,GACzBA,EAAMK,aAAe,O,EAQ7BD,EAAaD,QAHbO,E,EAAAA,WACAS,E,EAAAA,UACAG,E,EAAAA,2BAEWlB,IAAf,QCtCMmB,EAAc9B,YAAY,CAC5BC,KAAM,cACNC,aAAc,CACV6B,OAAQ,OACRC,SAAU,KACVC,UAAW,EACXC,iBAAkB,IAEtB7B,SAAU,CACN8B,iBAAkB,SAAC5B,EAAO6B,GACtB7B,EAAMwB,OAASK,EAAOC,SAE1BC,YAAa,SAAC/B,EAAO6B,GACjB7B,EAAMyB,SAAWI,EAAOC,SAE5BE,aAAc,SAAChC,GACXA,EAAM0B,WAAa,GAEvBO,sBAAuB,SAACjC,GACpBA,EAAM0B,UAAY,GAEtBQ,oBAAqB,SAAClC,GAClBA,EAAM2B,iBAAiBZ,KAAK,CACxBU,SAAUzB,EAAMyB,SAChBU,MAAOnC,EAAM0B,gB,EAWzBH,EAAYpB,QALZyB,E,EAAAA,iBACAG,E,EAAAA,YACAC,E,EAAAA,aACAE,E,EAAAA,oBACAD,E,EAAAA,sBAEWV,IAAf,QCpCMa,EAAe3C,YAAY,CAC7BC,KAAM,eACNC,aAAc,CACV0C,MAAO,GAEXvC,SAAU,CACNwC,iBAAkB,SAACtC,GACfA,EAAMqC,OAAS,GAEnBE,mBAAoB,SAACvC,GACjBA,EAAMqC,MAAQ,M,EAI8BD,EAAajC,QAAtDmC,E,EAAAA,iBAAkBC,E,EAAAA,mBAClBH,IAAf,QCNeI,EAHDC,YAAe,CACzBC,QAAS,CAAElD,cAAaY,eAAcmB,cAAaa,kBCAjDO,G,YAAU,WACZ,IAAIC,EAAWC,cACXC,EAAOC,aAAY,SAAC/C,GAAW,IAAD,EAK1BA,EAHAR,YAAeI,EAFW,EAEXA,SAAUC,EAFC,EAEDA,SAFC,EAK1BG,EAFAI,aAGJ,MAAO,CACHR,WACAC,WACAQ,aAT0B,EAGVA,aAOhBC,gBAV0B,EAGIA,gBAQ9BG,QAX0B,EAGqBA,QAS/C4B,MAPArC,EADAoC,aAAgBC,SAUrBW,KAECpD,EAMAkD,EANAlD,SACAC,EAKAiD,EALAjD,SACAQ,EAIAyC,EAJAzC,aACAC,EAGAwC,EAHAxC,gBACAG,EAEAqC,EAFArC,QACA4B,EACAS,EADAT,MA+BJ,OA7BAY,qBAAU,WAMNC,SAASC,iBAAiB,YALH,SAACC,GACF,KAAdA,EAAEC,SACFT,EAAS3C,UAIlB,IACHgD,qBAAU,YACFpD,EAAW,GAAKA,EAAW,GAAKS,IAChCsC,EAAShB,EAAiB,aAE1BS,EAAQ,EACRhC,EAAae,KAAI,SAACC,GAEVzB,EAAW,IAAMyB,EAAKH,UACtBtB,EAAW,IAAMyB,EAAKH,SAAWG,EAAKb,YACrCX,GAAYwB,EAAKL,eACdnB,EAAW,IAAMwB,EAAKL,cAAgBP,KAE1CmC,EAAStB,KACTsB,EAAShB,EAAiB,iBAIlCgB,EAAShB,EAAiB,gBAE/B,CAAC/B,EAAUwC,IAGV,qBACIiB,UAAU,WACVC,MAAO,CAAEC,IAAK3D,EAAW,KAAM4D,KAAM7D,EAAW,UCjE7C+C,EDqEAe,IAAMC,KAAKhB,GErEXiB,G,MCEE,WACb,IAOIC,EAPmBd,aAAY,SAAC/C,GAIhC,MAAO,CAAEK,aADLL,EADAI,aAAgBC,gBAGrB2C,KACG3C,aACwBe,KAAI,SAACC,EAAMyC,GACrC,OACI,eAAC,IAAMC,SAAP,WACI,qBACIT,UAAU,YACVC,MAAO,CACH5C,OAAQU,EAAKL,cAAgB,KAC7ByC,KAAMpC,EAAKH,SAAW,KACtB8C,MAAO3C,EAAKb,UAAY,QAGhC,qBACI8C,UAAU,eACVC,MAAO,CACH5C,OAAQU,EAAKJ,iBAAmB,KAChCwC,KAAMpC,EAAKH,SAAW,KACtB8C,MAAO3C,EAAKb,UAAY,UAdfsD,MAqB7B,OAAO,qBAAKR,UAAU,QAAf,SAAwBO,MCjCpBI,G,YCEM,WACjB,IAMM5B,EANKU,aAAY,SAAC/C,GAIpB,MAAO,CAAEqC,MADLrC,EADAoC,aAAgBC,SAGrBW,KACGX,MACF6B,EAAY,IAAIC,MAAM9B,GAAO+B,KAAK,MAAMhD,KAAI,SAACC,EAAMyC,GACnD,OACI,qBAAKR,UAAU,kBAAf,mBAAsCQ,MAK9C,OAAO,qBAAKR,UAAU,YAAf,SAA4BY,MCdjCG,EAAiB,WACnB,IAAIvB,EAAOC,aAAY,SAAC/C,GAAW,IAAD,EAG1BA,EADAuB,YAEJ,MAAO,CAAEG,UAJqB,EAEXA,UAECD,SAJU,EAEAA,aAI5BC,EAAwBoB,EAAxBpB,UAAWD,EAAaqB,EAAbrB,SACjB,OACI,sBAAK6B,UAAU,mBAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,oBAAf,SAAoC7B,IACpC,sBAAK6B,UAAU,qBAAf,mBAA2C5B,QAE/C,cAAC,EAAD,QCjBG2C,EDqBAX,IAAMC,KAAKU,GZEpBC,EAAe,WACjB,IAAIC,EAAUC,cACV1B,EAAOC,aAAY,SAAC/C,GAKpB,MAAO,CAAEwB,OADLxB,EAFAuB,YAAeC,OAGFa,MADbrC,EADAoC,aAAgBC,SAGrBW,KACGxB,EAAkBsB,EAAlBtB,OAAQa,EAAUS,EAAVT,MACVO,EAAWC,cAsCf,OApCAI,qBAAU,WACS,aAAXzB,IACAoB,EAAShB,EAAiB,UAC1BgB,EAAS1C,KACT0C,EAASN,KAELM,EADAP,EAAQ,EACCJ,IAEAC,MAGF,cAAXV,IACAoB,EAAStB,KACTsB,EAAShB,EAAiB,UAC1BgB,EAASL,KACTkC,cAAcnF,GACdmF,cAAclF,GACdkF,cAAcpF,GACdkF,EAAQxD,KAAK,iBAElB,CAACS,EAAQa,IAEZY,qBAAU,WACNL,EAASlC,KACTrB,EAAiBqF,aAAY,WACzB9B,EAASzB,KACTyB,EAASZ,OACV,IACH1C,EAAmBoF,aAAY,WAC3B9B,EAASlC,OACV,KACHnB,EAAgBmF,aAAY,WACxB9B,EAAS7C,OACV,MACJ,IAGC,sBAAKuD,UAAU,iBAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Qc3EGgB,EdgFAZ,IAAMC,KAAKW,GehFXK,G,MCEM,WACjB,OACI,sBAAKrB,UAAU,iBAAf,UACI,6CACA,qBAAKA,UAAU,2BAAf,SACI,qBAAIA,UAAU,mBAAd,UACI,oBAAIA,UAAU,wBAAd,SACI,cAAC,IAAD,CAAMsB,GAAG,eAAT,wBAEJ,oBAAItB,UAAU,wBAAd,SACI,cAAC,IAAD,CAAMsB,GAAG,aAAT,mCCZTC,G,MCGM,WACjB,IAQIC,EARO/B,aAAY,SAAC/C,GAIpB,MAAO,CAAE2B,iBADL3B,EADAuB,YAAeI,oBAGpBqB,KAEGrB,iBAC+BP,KAAI,SAACC,EAAMyC,GAC5C,OACI,+BACI,yCAAYzC,EAAKI,YACjB,0CAAaJ,EAAKc,WAFb2B,MAMjB,OACI,sBAAKR,UAAU,iBAAf,UACI,oBAAIA,UAAU,wBAAd,uBACA,qBAAIA,UAAU,sBAAd,cAAsCwB,KACtC,qBAAKxB,UAAU,8BAAf,SACI,wBAAQA,UAAU,qBAAlB,SACI,cAAC,IAAD,CAAMsB,GAAG,IAAT,2B,QC1BLG,G,MCKO,WAClB,IAAIR,EAAUC,cADU,EAEUQ,qBAFV,mBAEnBC,EAFmB,KAEPC,EAFO,OAGcF,oBAAS,GAHvB,mBAGnBG,EAHmB,KAGLC,EAHK,KAIpBxC,EAAWC,cACXwC,EAAQF,EACR,qBAAK7B,UAAU,iBAAf,wCACA,KACJ,OACI,sBAAKA,UAAU,kBAAf,UACI,6CACA,uBACIgC,KAAK,OACLhC,UAAU,eACViC,SAAU,SAACnC,GACP8B,EAAc9B,EAAEoC,OAAOC,QAE3BC,YAAY,6BAEfL,EACD,wBACI/B,UAAU,iBACVqC,QAAS,SAACvC,GACN,IAAK6B,EAGD,OAFAG,GAAiBD,QACjB/B,EAAEwC,iBAGNR,GAAiBD,GACjBvC,EAASb,EAAYkD,IACrBV,EAAQxD,KAAK,UAVrB,iCCzBG8E,G,MCQH,WACR,IAAItB,EAAUC,cAId,OAHIsB,SAASC,QACTxB,EAAQxD,KAAK,KAGb,cAAC,IAAD,CAAUyB,MAAOA,EAAjB,SACI,qBAAKc,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO0C,OAAK,EAACC,KAAK,IAAIC,UAAWvB,IACjC,cAAC,IAAD,CAAOsB,KAAK,eAAeC,UAAWnB,IACtC,cAAC,IAAD,CAAOkB,KAAK,QAAQC,UAAW5B,IAC/B,cAAC,IAAD,CAAO2B,KAAK,aAAaC,UAAWrB,eCjB5DsB,IAASC,OACL,cAAC,IAAD,UACI,cAAC,EAAD,MAEJlD,SAASmD,eAAe,W","file":"static/js/main.b3af5ee6.chunk.js","sourcesContent":["import React from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n    addNewPipe,\n    movePipes,\n    getUserScore,\n    changeGameStatus,\n    setUserListTopScore,\n    fallBird,\n    setDefaultBirdLife,\n    setStartPosForBird,\n    setUserScoreToDefault,\n    decreaseBirdLife,\n    deleteItemFromArrayOfPipes,\n} from \"../../store/reducers\";\nimport \"./App-game-field.scss\";\nimport AppBird from \"../App-bird\";\nimport AppPipes from \"../App-pipes\";\nimport AppUserDetails from \"../App-user-details\";\nlet timerPipesMove;\nlet timerPipesCreate;\nlet timerBirdFall;\nconst AppGameField = () => {\n    let history = useHistory();\n    let data = useSelector((state) => {\n        let {\n            gameReducer: { status },\n            lifesReducer: { lifes },\n        } = state;\n        return { status, lifes };\n    }, shallowEqual);\n    let { status, lifes } = data;\n    let dispatch = useDispatch();\n\n    useEffect(() => {\n        if (status === \"next try\") {\n            dispatch(changeGameStatus(\"start\"));\n            dispatch(setStartPosForBird());\n            dispatch(decreaseBirdLife());\n            if (lifes > 1) {\n                dispatch(setUserScoreToDefault());\n            } else {\n                dispatch(setUserListTopScore());\n            }\n        }\n        if (status === \"game over\") {\n            dispatch(deleteItemFromArrayOfPipes());\n            dispatch(changeGameStatus(\"start\"));\n            dispatch(setDefaultBirdLife());\n            clearInterval(timerPipesCreate);\n            clearInterval(timerBirdFall);\n            clearInterval(timerPipesMove);\n            history.push(\"/top-score\");\n        }\n    }, [status, lifes]);\n\n    useEffect(() => {\n        dispatch(addNewPipe());\n        timerPipesMove = setInterval(() => {\n            dispatch(movePipes());\n            dispatch(getUserScore());\n        }, 50);\n        timerPipesCreate = setInterval(() => {\n            dispatch(addNewPipe());\n        }, 8000);\n        timerBirdFall = setInterval(() => {\n            dispatch(fallBird());\n        }, 50);\n    }, []);\n\n    return (\n        <div className=\"app-game-field\">\n            <AppBird />\n            <AppPipes />\n            <AppUserDetails />\n        </div>\n    );\n};\n\nexport default React.memo(AppGameField);\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst birdReducer = createSlice({\n    name: \"birdReducer\",\n    initialState: {\n        birdPosX: 20,\n        birdPosY: 100,\n    },\n    reducers: {\n        fallBird: (state) => {\n            state.birdPosY += 4;\n        },\n        flyBird: (state) => {\n            state.birdPosY -= 30;\n        },\n        setStartPosForBird: (state) => {\n            (state.birdPosX = 20), (state.birdPosY = 100);\n        },\n    },\n});\nexport const { fallBird, flyBird, setStartPosForBird } = birdReducer.actions;\nexport default birdReducer.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst pipesReducer = createSlice({\n    name: \"pipesReducer\",\n    initialState: {\n        arrayOfPipes: [],\n        gameFieldHeight: 394,\n        gameFieldWidth: 288,\n        pipeWidth: 50,\n        pipeGap: 100,\n    },\n    reducers: {\n        addNewPipe: (state) => {\n            let height = Math.floor(Math.random() * 394) - 100;\n            if (height < 0) {\n                height = 0;\n            }\n            let { gameFieldWidth, gameFieldHeight } = state;\n            state.arrayOfPipes.push({\n                pipeHeightTop: height,\n                pipeHeightBottom: gameFieldHeight - height,\n                pipeWidth: state.pipeWidth,\n                pipePosX: gameFieldWidth,\n            });\n        },\n        movePipes: (state) => {\n            state.arrayOfPipes.map((elem) => {\n                return (elem.pipePosX -= 1);\n            });\n        },\n        deleteItemFromArrayOfPipes: (state) => {\n            state.arrayOfPipes = [];\n        },\n    },\n});\nexport const {\n    addNewPipe,\n    movePipes,\n    deleteItemFromArrayOfPipes,\n} = pipesReducer.actions;\nexport default pipesReducer.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst gameReducer = createSlice({\n    name: \"gameReducer\",\n    initialState: {\n        status: \"stop\",\n        userName: null,\n        userScore: 0,\n        userListTopScore: [],\n    },\n    reducers: {\n        changeGameStatus: (state, action) => {\n            state.status = action.payload;\n        },\n        getUserName: (state, action) => {\n            state.userName = action.payload;\n        },\n        getUserScore: (state) => {\n            state.userScore += 1;\n        },\n        setUserScoreToDefault: (state) => {\n            state.userScore = 0;\n        },\n        setUserListTopScore: (state) => {\n            state.userListTopScore.push({\n                userName: state.userName,\n                score: state.userScore,\n            });\n        },\n    },\n});\nexport const {\n    changeGameStatus,\n    getUserName,\n    getUserScore,\n    setUserListTopScore,\n    setUserScoreToDefault,\n} = gameReducer.actions;\nexport default gameReducer.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst lifesReducer = createSlice({\n    name: \"lifesReducer\",\n    initialState: {\n        lifes: 3,\n    },\n    reducers: {\n        decreaseBirdLife: (state) => {\n            state.lifes -= 1;\n        },\n        setDefaultBirdLife: (state) => {\n            state.lifes = 3;\n        },\n    },\n});\nexport const { decreaseBirdLife, setDefaultBirdLife } = lifesReducer.actions;\nexport default lifesReducer.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n    birdReducer,\n    pipesReducer,\n    gameReducer,\n    lifesReducer,\n} from \"./reducers\";\n\nconst store = configureStore({\n    reducer: { birdReducer, pipesReducer, gameReducer, lifesReducer },\n});\nexport default store;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\";\nimport {\n    flyBird,\n    changeGameStatus,\n    deleteItemFromArrayOfPipes,\n} from \"../../store/reducers\";\nimport \"./App-bird.scss\";\nconst AppBird = () => {\n    let dispatch = useDispatch();\n    let data = useSelector((state) => {\n        let {\n            birdReducer: { birdPosX, birdPosY },\n            pipesReducer: { arrayOfPipes, gameFieldHeight, pipeGap },\n            lifesReducer: { lifes },\n        } = state;\n        return {\n            birdPosX,\n            birdPosY,\n            arrayOfPipes,\n            gameFieldHeight,\n            pipeGap,\n            lifes,\n        };\n    }, shallowEqual);\n    let {\n        birdPosX,\n        birdPosY,\n        arrayOfPipes,\n        gameFieldHeight,\n        pipeGap,\n        lifes,\n    } = data;\n    useEffect(() => {\n        const handleKeyPress = (e) => {\n            if (e.keyCode === 32) {\n                dispatch(flyBird());\n            }\n        };\n        document.addEventListener(\"keypress\", handleKeyPress);\n    }, []);\n    useEffect(() => {\n        if (birdPosY < 0 || birdPosY + 30 > gameFieldHeight) {\n            dispatch(changeGameStatus(\"next try\"));\n        }\n        if (lifes > 0) {\n            arrayOfPipes.map((elem) => {\n                if (\n                    birdPosX + 30 >= elem.pipePosX &&\n                    birdPosX + 30 <= elem.pipePosX + elem.pipeWidth &&\n                    (birdPosY <= elem.pipeHeightTop ||\n                        birdPosY + 30 >= elem.pipeHeightTop + pipeGap)\n                ) {\n                    dispatch(deleteItemFromArrayOfPipes());\n                    dispatch(changeGameStatus(\"next try\"));\n                }\n            });\n        } else {\n            dispatch(changeGameStatus(\"game over\"));\n        }\n    }, [birdPosY, lifes]);\n\n    return (\n        <div\n            className=\"app-bird\"\n            style={{ top: birdPosY + \"px\", left: birdPosX + \"px\" }}\n        ></div>\n    );\n};\nexport default React.memo(AppBird);\n","import AppBird from \"./App-bird\";\nexport default AppBird;\n","import AppPipes from \"./App-pipes\";\nexport default AppPipes;\n","import React from \"react\";\nimport { useSelector, shallowEqual } from \"react-redux\";\nimport \"./App-pipes.scss\";\nconst AppPipes = () => {\n    let pipesReducerData = useSelector((state) => {\n        let {\n            pipesReducer: { arrayOfPipes },\n        } = state;\n        return { arrayOfPipes };\n    }, shallowEqual);\n    let { arrayOfPipes } = pipesReducerData;\n    let pipesArray = arrayOfPipes.map((elem, index) => {\n        return (\n            <React.Fragment key={index}>\n                <div\n                    className=\"pipes-top\"\n                    style={{\n                        height: elem.pipeHeightTop + \"px\",\n                        left: elem.pipePosX + \"px\",\n                        width: elem.pipeWidth + \"px\",\n                    }}\n                ></div>\n                <div\n                    className=\"pipes-bottom\"\n                    style={{\n                        height: elem.pipeHeightBottom + \"px\",\n                        left: elem.pipePosX + \"px\",\n                        width: elem.pipeWidth + \"px\",\n                    }}\n                ></div>\n            </React.Fragment>\n        );\n    });\n\n    return <div className=\"pipes\">{pipesArray}</div>;\n};\nexport default AppPipes;\n","import AppBirdLifes from \"./App-bird-lifes\";\nexport default AppBirdLifes;\n","import React from \"react\";\nimport { useSelector, shallowEqual } from \"react-redux\";\nimport \"./App-bird-lifes.scss\";\nconst AppBirdLifes = () => {\n    let data = useSelector((state) => {\n        let {\n            lifesReducer: { lifes },\n        } = state;\n        return { lifes };\n    }, shallowEqual);\n    let { lifes } = data;\n    let dataLifes = new Array(lifes).fill(null).map((elem, index) => {\n        return (\n            <div className=\"app-lifes__item\" key={index}>\n                &#10084;\n            </div>\n        );\n    });\n    return <div className=\"app-lifes\">{dataLifes}</div>;\n};\nexport default AppBirdLifes;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./App-game-user.scss\";\nimport AppBirdLifes from \"../App-bird-lifes\";\nconst AppUserDetails = () => {\n    let data = useSelector((state) => {\n        let {\n            gameReducer: { userScore, userName },\n        } = state;\n        return { userScore, userName };\n    });\n    let { userScore, userName } = data;\n    return (\n        <div className=\"app-bottom-image\">\n            <div className=\"app-game-user\">\n                <div className=\"app-game-userName\">{userName}</div>\n                <div className=\"app-game-userScore\">Score {userScore}</div>\n            </div>\n            <AppBirdLifes />\n        </div>\n    );\n};\nexport default React.memo(AppUserDetails);\n","import AppUserDetails from \"./App-user-details\";\nexport default AppUserDetails;\n","import AppGameField from \"./App-game-field\";\nexport default AppGameField;\n","import AppStartPage from \"./App-start-page\";\nexport default AppStartPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./App-start-page.scss\";\nconst AppStartPage = () => {\n    return (\n        <div className=\"app-start-page\">\n            <h2>Flappy Bird</h2>\n            <div className=\"start-page__list-wrapper\">\n                <ul className=\"start-page__list\">\n                    <li className=\"start-page__list-item\">\n                        <Link to=\"/create-user\">New Game</Link>\n                    </li>\n                    <li className=\"start-page__list-item\">\n                        <Link to=\"/top-score\">Top Score</Link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    );\n};\nexport default AppStartPage;\n","import AppGameScore from \"./App-game-score\";\nexport default AppGameScore;\n","import React from \"react\";\nimport { useSelector, shallowEqual } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./App-game-score.scss\";\nconst AppGameScore = () => {\n    let data = useSelector((state) => {\n        let {\n            gameReducer: { userListTopScore },\n        } = state;\n        return { userListTopScore };\n    }, shallowEqual);\n\n    let { userListTopScore } = data;\n    let usersTopScore = userListTopScore.map((elem, index) => {\n        return (\n            <li key={index}>\n                <div>User: {elem.userName}</div>\n                <div>Score: {elem.score}</div>\n            </li>\n        );\n    });\n    return (\n        <div className=\"app-game-score\">\n            <h2 className=\"app-game-score__title\">Top score</h2>\n            <ul className=\"app-game-score-list\"> {usersTopScore}</ul>\n            <div className=\"app-game-score-btn__wrapper\">\n                <button className=\"app-game-score-btn\">\n                    <Link to=\"/\">Home</Link>\n                </button>\n            </div>\n        </div>\n    );\n};\nexport default AppGameScore;\n","import AppCreateUser from \"./App-create-user\";\nexport default AppCreateUser;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { getUserName } from \"../../store/reducers\";\nimport \"./App-create-user.scss\";\nconst AppCreateUser = () => {\n    let history = useHistory();\n    let [inputValue, setInputValue] = useState();\n    let [errorHandler, setErrorHandler] = useState(false);\n    let dispatch = useDispatch();\n    let error = errorHandler ? (\n        <div className=\"app-user-error\">Please,enter your username</div>\n    ) : null;\n    return (\n        <div className=\"app-create-user\">\n            <h2>Flappy Bird</h2>\n            <input\n                type=\"text\"\n                className=\"app-username\"\n                onChange={(e) => {\n                    setInputValue(e.target.value);\n                }}\n                placeholder=\"Please type in your name\"\n            ></input>\n            {error}\n            <button\n                className=\"app-start-game\"\n                onClick={(e) => {\n                    if (!inputValue) {\n                        setErrorHandler(!errorHandler);\n                        e.preventDefault();\n                        return;\n                    }\n                    setErrorHandler(!errorHandler);\n                    dispatch(getUserName(inputValue));\n                    history.push(\"/game\");\n                }}\n            >\n                Start New game\n            </button>\n        </div>\n    );\n};\nexport default AppCreateUser;\n","import App from \"./App\";\nexport default App;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport store from \"../../store\";\nimport AppGameField from \"../App-game-field\";\nimport AppStartPage from \"../App-start-page\";\nimport AppGameScore from \"../App-game-score\";\nimport AppCreateUser from \"../App-create-user\";\nimport \"./App.scss\";\nconst App = () => {\n    let history = useHistory();\n    if (location.reload) {\n        history.push(\"/\");\n    }\n    return (\n        <Provider store={store}>\n            <div className=\"App\">\n                <div className=\"container\">\n                    <Switch>\n                        <Route exact path=\"/\" component={AppStartPage} />\n                        <Route path=\"/create-user\" component={AppCreateUser} />\n                        <Route path=\"/game\" component={AppGameField} />\n                        <Route path=\"/top-score\" component={AppGameScore} />\n                    </Switch>\n                </div>\n            </div>\n        </Provider>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}